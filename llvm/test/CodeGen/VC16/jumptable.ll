; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=vc16 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=VC16I

define void @jt(i16 %in, i16* %out) {
; VC16I-LABEL: jt:
; VC16I:       ; %bb.0: ; %entry
; VC16I-NEXT:    lea sp, sp, -4
; VC16I-NEXT:    sw s0, 2(sp)
; VC16I-NEXT:    sw ra, 0(sp)
; VC16I-NEXT:    lea s0, sp, 4
; VC16I-NEXT:    lli a2, 2
; VC16I-NEXT:    cmp a2, a0
; VC16I-NEXT:    blt .LBB0_3
; VC16I-NEXT:    jal t0, .LBB0_1
; VC16I-NEXT:  .LBB0_1: ; %entry
; VC16I-NEXT:    lli t0, 1
; VC16I-NEXT:    cmp a0, t0
; VC16I-NEXT:    bz .LBB0_5
; VC16I-NEXT:    jal t0, .LBB0_2
; VC16I-NEXT:  .LBB0_2: ; %entry
; VC16I-NEXT:    cmp a0, a2
; VC16I-NEXT:    bz .LBB0_6
; VC16I-NEXT:    jal t0, .LBB0_9
; VC16I-NEXT:  .LBB0_6: ; %bb2
; VC16I-NEXT:    lli a2, 3
; VC16I-NEXT:    sw a2, 0(a1)
; VC16I-NEXT:    jal t0, .LBB0_9
; VC16I-NEXT:  .LBB0_3: ; %entry
; VC16I-NEXT:    lli t0, 3
; VC16I-NEXT:    cmp a0, t0
; VC16I-NEXT:    bz .LBB0_7
; VC16I-NEXT:    jal t0, .LBB0_4
; VC16I-NEXT:  .LBB0_4: ; %entry
; VC16I-NEXT:    lli a2, 4
; VC16I-NEXT:    cmp a0, a2
; VC16I-NEXT:    bz .LBB0_8
; VC16I-NEXT:    jal t0, .LBB0_9
; VC16I-NEXT:  .LBB0_8: ; %bb4
; VC16I-NEXT:    lli a2, 1
; VC16I-NEXT:    sw a2, 0(a1)
; VC16I-NEXT:  .LBB0_9: ; %exit
; VC16I-NEXT:    lw ra, 0(sp)
; VC16I-NEXT:    lw s0, 2(sp)
; VC16I-NEXT:    lea sp, sp, 4
; VC16I-NEXT:    jalr ra, 0
; VC16I-NEXT:  .LBB0_5: ; %bb1
; VC16I-NEXT:    lli a2, 4
; VC16I-NEXT:    sw a2, 0(a1)
; VC16I-NEXT:    jal t0, .LBB0_9
; VC16I-NEXT:  .LBB0_7: ; %bb3
; VC16I-NEXT:    sw a2, 0(a1)
; VC16I-NEXT:    jal t0, .LBB0_9
entry:
  switch i16 %in, label %exit [
    i16 1, label %bb1
    i16 2, label %bb2
    i16 3, label %bb3
    i16 4, label %bb4
  ]
bb1:
  store i16 4, i16* %out
  br label %exit
bb2:
  store i16 3, i16* %out
  br label %exit
bb3:
  store i16 2, i16* %out
  br label %exit
bb4:
  store i16 1, i16* %out
  br label %exit
exit:
  ret void
}
